// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id             Int       @id @default(autoincrement())
  nome           String    @db.VarChar(100)
  email          String    @unique @db.VarChar(100)
  telefone       String?   @db.VarChar(15)
  dataNascimento DateTime  @map("data_nascimento")
  locacoes       Locacao[]
  Usuario        Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId      String    @db.VarChar(36)

  @@map("clientes")
}

model Filme {
  id            Int       @id @default(autoincrement())
  titulo        String    @db.VarChar(200)
  genero        String?   @db.VarChar(50)
  anoLancamento Int?      @map("ano_lancamento")
  duracao       Int?
  disponivel    Boolean   @default(true)
  locacoes      Locacao[]

  @@map("filmes")
}

model Locacao {
  id            Int       @id @default(autoincrement())
  clienteId     Int
  filmeId       Int
  dataLocacao   DateTime  @default(now()) @map("data_locacao")
  dataDevolucao DateTime? @map("data_devolucao")
  valor         Decimal?  @db.Decimal(10, 2)

  cliente Cliente @relation(fields: [clienteId], references: [id])
  filme   Filme   @relation(fields: [filmeId], references: [id])

  @@map("locacoes")
}

model Usuario {
  id                String    @id @default(uuid()) @db.VarChar(36)
  nome              String    @db.VarChar(50)
  email             String    @unique() @db.VarChar(100)
  senha             String    @db.VarChar(60)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  ultimoAcesso      DateTime? @db.Timestamp(0)
  codigoRecuperacao String?   @db.VarChar(6)
  clientes          Cliente[]
  logs              Log[]

  @@map("usuarios")
}

model Log {
  id          Int      @id @default(autoincrement())
  usuario     Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId   String   @db.VarChar(36)
  descricao   String   @db.VarChar(60)
  complemento String   @db.VarChar(200)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("logs")
}
